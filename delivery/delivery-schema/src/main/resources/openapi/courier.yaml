openapi: "3.0.1"
info:
  title: "Courier API"
  version: "1.0.0"
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /customers:
    get:
      summary: Pobierz wszystkich klientów
      operationId: getAllCustomers
      responses:
        '200':
          description: Lista klientów
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerDTO'
    post:
      summary: Dodaj nowego klienta
      operationId: saveCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDTO"
      responses:
        '201':
          description: Klient został dodany
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
  /customers/{id}:
    get:
      summary: Pobierz klienta o określonym identyfikatorze
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          description: Identyfikator klienta do pobrania
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Szczegóły klienta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '404':
          description: Nie znaleziono
    put:
      summary: Zaktualizuj klienta o określonym identyfikatorze
      operationId: updateCustomerById
      parameters:
        - name: id
          in: path
          description: Identyfikator adresu do zaktualizowania
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDTO"
      responses:
        '200':
          description: Klient został zaktualizowany
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
        '404':
          description: Nie znaleziono klienta o podanym identyfikatorze
    delete:
      summary: Usuń klienta o określonym identyfikatorze
      operationId: deleteCustomerById
      parameters:
        - name: id
          in: path
          description: Identyfikator klienta do usunięcia
          required: true
          schema:
            type: string
            format: uuid

      responses:
        '204':
          description: Klient został usunięty
        '404':
          description: Nie znaleziono klienta o podanym identyfikatorze
  /orders:
    get:
      summary: Pobierz wszystkie zamówienia
      operationId: getAllOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
    post:
      summary: Dodaj nowe zamówienie
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '201':
          description: Stworzono
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
  /orders/report:
    get:
      summary: Pobierz zamówienia z danego zakresu
      operationId: getOrdersReport
      parameters:
        - name: start
          in: query
          description: Identyfikator klienta do usunięcia
          required: true
          schema:
            type: string
            format: date

        - name: end
          in: query
          description: Identyfikator klienta do usunięcia
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK

          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
    post:
      summary: Pobierz raport
      operationId: download report


      responses:
        '201':
          description: Pobrano
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
  /orders/{id}:
    get:
      summary: Pobierz zamówienie o określonym identyfikatorze
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Identyfikator zamówienia
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Nie znaleziono zamówienia o podanym identyfikatorze
    put:
      summary: Zaktualizuj zamówienie o określonym identyfikatorze
      operationId: updateOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Identyfikator zamówienia
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Nie znaleziono zamówienia o podanym identyfikatorze
    delete:
      summary: Usuń zamówienie o określonym identyfikatorze
      operationId: deleteOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Identyfikator zamówienia
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Usunięto
        '404':
          description: Nie znaleziono zamówienia o podanym identyfikatorze
  /customers/{id}/orders:
    get:
      summary: Pobierz wszystkie zamówienia użytkownika
      operationId: getCustomerOrders
      parameters:
        - name: id
          in: path
          required: true
          description: Identyfikator użytkownika
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Nie znaleziono klienta o podanym identyfikatorze
  /drivers:
    get:
      summary: Pobierz wszystkich kierowców
      operationId: getAllDrivers
      responses:
        '200':
          description: Lista wszystkich kierowców
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverDTO'
    post:
      summary: Dodaj nowego kierowcę
      operationId: createDriver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverDTO'
      responses:
        '201':
          description: Kierowca został dodany
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDTO'
        '400':
          description: Nieprawidłowe dane kierowcy
  /drivers/{id}:
    get:
      summary: Pobierz kierowcę o określonym identyfikatorze
      operationId: getDriverById
      parameters:
        - in: path
          name: id
          description: Identyfikator kierowcy
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Szczegóły kierowcy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDTO'
        '404':
          description: Kierowca o podanym identyfikatorze nie istnieje
    put:
      summary: Zaktualizuj kierowcę o określonym identyfikatorze
      operationId: updateDriverById
      parameters:
        - in: path
          name: id
          description: Identyfikator kierowcy
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverDTO'
      responses:
        '200':
          description: Kierowca został zaktualizowany
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDTO'
        '400':
          description: Nieprawidłowe dane kierowcy
        '404':
          description: Kierowca o podanym identyfikatorze nie istnieje
    delete:
      summary: Usuń kierowcę o określonym identyfikatorze
      operationId: deleteDriverById
      parameters:
        - in: path
          name: id
          description: Identyfikator kierowcy
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Kierowca został usunięty
        '404':
          description: Kierowca o podanym identyfikatorze nie istnieje
  /orders/{orderId}/tracking:
    get:
      summary: Śledzenie przesyłki zamówienia o określonym identyfikatorze
      operationId: getOrderTracking

      parameters:
        - in: path
          name: orderId
          description: Identyfikator zamówienia
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Szczegóły przesyłki
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingDTO'
        '404':
          description: Zamówienie o podanym identyfikatorze nie istnieje
    put:
      summary: Aktualizuj dane przesyłki zamówienia
      operationId: updateOrderTracking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingDTO'
      parameters:
        - in: path
          name: orderId
          description: Identyfikator zamówienia
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Zaktualizowano dane przesyłki
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingDTO'
        '404':
          description: Zamówienie o podanym identyfikatorze nie istnieje

components:
  schemas:
    OrderDTO:
      type: object
      required:
        - customerId
        - senderAddress
        - receiverAddress
      properties:
        id:
          type: string
        customerId:
          type: string
        senderAddress:
          type: string
        receiverAddress:
          type: string
        packageType:
          type: string
        packageSize:
          type: string
        deliveryDate:
          type: string
          format: date
        status:
          type: string

    DriverDTO:
      type: object
      required:
        - firstName
        - lastName
        - phone
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string

    CustomerDTO:
      type: object
      required:
        - firstName
        - lastName
        - address
        - phone
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string

    TrackingDTO:
      type: object
      required:
        - orderId
        - eventType
        - eventTime
      properties:
        id:
          type: string
          format: uuid
        orderId:
          type: string
          format: uuid
        eventType:
          type: string
        eventTime:
          type: string
          format: date
        location:
          type: string
        description:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: string