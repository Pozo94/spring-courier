/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package pl.com.gymtech.courierspring.api;

import pl.com.gymtech.courierspring.entity.AddressDomain;
import pl.com.gymtech.courierspring.model.Address;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-16T10:08:20.752442600+02:00[Europe/Warsaw]")
@Validated
@Api(value = "addresses", description = "the addresses API")
public interface AddressesApi {

    default AddressesApiDelegate getDelegate() {
        return new AddressesApiDelegate() {};
    }

    /**
     * GET /addresses : Pobierz wszystkie adresy
     *
     * @return Lista adresów (status code 200)
     */
    @ApiOperation(value = "Pobierz wszystkie adresy", nickname = "addressesGet", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Lista adresów") })
    @GetMapping(
        value = "/addresses"
    )
    default ResponseEntity<List<AddressDomain>> addressesGet() {
        return getDelegate().addressesGet();
    }


    /**
     * DELETE /addresses/{id} : Usuń adres o określonym identyfikatorze
     *
     * @param id Identyfikator adresu do usunięcia (required)
     * @return Adres został usunięty (status code 204)
     *         or Nie znaleziono adresu o podanym identyfikatorze (status code 404)
     */
    @ApiOperation(value = "Usuń adres o określonym identyfikatorze", nickname = "addressesIdDelete", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Adres został usunięty"),
        @ApiResponse(code = 404, message = "Nie znaleziono adresu o podanym identyfikatorze") })
    @DeleteMapping(
        value = "/addresses/{id}"
    )
    default ResponseEntity<Void> addressesIdDelete(@ApiParam(value = "Identyfikator adresu do usunięcia",required=true) @PathVariable("id") Long id) {
        return getDelegate().addressesIdDelete(id);
    }


    /**
     * GET /addresses/{id} : Pobierz adres o określonym identyfikatorze
     *
     * @param id Identyfikator adresu do pobrania (required)
     * @return Szczegóły adresu (status code 200)
     *         or Nie znaleziono adresu o podanym identyfikatorze (status code 404)
     */
    @ApiOperation(value = "Pobierz adres o określonym identyfikatorze", nickname = "addressesIdGet", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Szczegóły adresu"),
        @ApiResponse(code = 404, message = "Nie znaleziono adresu o podanym identyfikatorze") })
    @GetMapping(
        value = "/addresses/{id}"
    )
    default ResponseEntity<AddressDomain> addressesIdGet(@ApiParam(value = "Identyfikator adresu do pobrania",required=true) @PathVariable("id") Long id) {
        return getDelegate().addressesIdGet(id);
    }


    /**
     * PUT /addresses/{id} : Zaktualizuj adres o określonym identyfikatorze
     *
     * @param id Identyfikator adresu do zaktualizowania (required)
     * @param address  (required)
     * @return Adres został zaktualizowany (status code 200)
     *         or Nie znaleziono adresu o podanym identyfikatorze (status code 404)
     */
    @ApiOperation(value = "Zaktualizuj adres o określonym identyfikatorze", nickname = "addressesIdPut", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Adres został zaktualizowany"),
        @ApiResponse(code = 404, message = "Nie znaleziono adresu o podanym identyfikatorze") })
    @PutMapping(
        value = "/addresses/{id}",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> addressesIdPut(@ApiParam(value = "Identyfikator adresu do zaktualizowania",required=true) @PathVariable("id") Long id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody Address address) {
        return getDelegate().addressesIdPut(id, address);
    }


    /**
     * POST /addresses : Dodaj nowy adres
     *
     * @param address  (required)
     * @return Adres został dodany (status code 201)
     */
    @ApiOperation(value = "Dodaj nowy adres", nickname = "addressesPost", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Adres został dodany") })
    @PostMapping(
        value = "/addresses",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> addressesPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Address address) {
        return getDelegate().addressesPost(address);
    }

}
